<% content_for :title, "Where" %>
<h1>Where are you complaining about?</h1>
</br>
<%= form_for :complaints do |f| %>
    Company Address:</br> <%= f.text_field :address %></br>
<p></p>
<%= f.submit %>
<p></p>
<% end %>

  <div id = "map", style='width: 800px; height: 400px;'>
  </div>


  <div id="message">It's been hard work so far, so lets take a break, I think using your phone on your back in bed to recover will help... maybe followed by a bit of wake up exercise, like a short stroll.</div>

  <button id="link" data-path="<%= when_path%>">Next Page</button>

<script>
handler = Gmaps.build('Google');
handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
  markers = handler.addMarkers([
    {
      "lat": 0,
      "lng": 0,
      "infowindow": "hello!"
    }
  ]);
  handler.bounds.extendWith(markers);
  handler.fitMapToBounds();
})



$(function () {
  /* thanks https://github.com/KrauseFx/whats-the-user-doing */
  if (!Array.prototype.last) {
    Array.prototype.last = function() {
      return this[this.length - 1];
    }
  }

  var historicMotion = {
    "x": [],
    "y": [],
    "z": []
  };

  var historicOrientation = {
    "x": [],
    "y": [],
    "z": []
  };

  window.lyingDownStart = undefined;
  window.lyingDownDone = false;
  window.walkingStart = undefined;
  window.walkingDone = false;
  window.neitherCount = 0

 function setStatus(status) {
    if (status === types.LYING_DOWN) {
      neitherCount = 0;
      if (!window.lyingDownStart) {
        window.lyingDownStart = new Date();
      } else {
        if (new Date() - window.lyingDownStart > 1000) {
          window.lyingDownDone = true;
          $('#message').text('nice rest there... time to get up and exercise!');
        }
      }
    } else if (status === types.WALKING) {
      neitherCount = 0;
      if (!window.walkingStart && window.lyingDownDone) {
        window.walkingStart = new Date();
      } else {
        if (new Date() - window.walkingStart > 4000 && window.lyingDownDone) {
          window.walkingDone = true;
          $('#message').text('well done! time to get back to complaining, please continue.')
        }
      }
    } else {
      neitherCount++;
      if (neitherCount > 5) {
        window.lyingDownStart = undefined;
        window.walkingStart = undefined;
      }
    }
  }

  var types = {
    LYING_DOWN: 1,
    WALKING: 2
  };

  function updateStatus() {
    let movement = mostRecentMovementOverall(75)
    // Below some stupid, very basic code to guess what the user is doing
    // As described in the README, this is just a proof of concept
    if (mostRecentMovementOverall(4000) > 40) { // TODO: haven't tested this, 1,000 so it's a longer time
      setStatus("driving or other form of transportation")
    } else if (historicOrientation["z"].last() > 70 || historicOrientation["z"].last() < -70) {
      setStatus("lying in bed sideways, or taking a landscape picture")
    } else if (historicOrientation["y"].last() > 160 || historicOrientation["y"].last() < -160) {
      setStatus(types.LYING_DOWN)
    } else if (historicOrientation["y"].last() >= 30 && historicOrientation["y"].last() < 70) {
      if (movement > 18) {
        setStatus(types.WALKING)
      } else {
        setStatus("using your phone, sitting or standing")
      }
    } else if (historicOrientation["y"].last() >= 70 && historicOrientation["y"].last() < 95) {
      if (movement > 18) {
        setStatus(types.WALKING)
      } else {
        setStatus("taking a picture")
      }
    } else if (historicOrientation["y"].last() >= 95 && historicOrientation["y"].last() < 120) {
      setStatus("taking a selfie")
    } else if (Math.round(historicOrientation["z"].last()) == 0 && Math.round(historicOrientation["y"].last()) == 0) {
      setStatus("using the phone on a table")
    } else {
      if (movement > 18) {
        setStatus(types.WALKING)
      } else {
        setStatus("using your phone, sitting or standing")
      }
    }
  }
  function mostRecentMovementOverall(numberOfHistoricPoints) {
    return (mostRecentMovement(historicMotion["x"], numberOfHistoricPoints, true) +
            mostRecentMovement(historicMotion["y"], numberOfHistoricPoints, true) +
            mostRecentMovement(historicMotion["z"], numberOfHistoricPoints, true)) / 3.0
  }
  // numberOfHistoricPoints: 100 is about 3 seconds
  function mostRecentMovement(array, numberOfHistoricPoints, removeNegatives) {
    if (array.length > numberOfHistoricPoints) {
      totalSum = 0
      for (var toCount = 0; toCount < numberOfHistoricPoints; toCount++) {
        currentElement = array[array.length - toCount - 1]
        currentElement *= (1 - toCount / numberOfHistoricPoints) // weight the most recent data more
        if (currentElement < 0 && removeNegatives) currentElement = currentElement * -1
        if (currentElement > 0.1 || currentElement < -0.1) totalSum += currentElement
      }
      return totalSum * 100 / numberOfHistoricPoints
    }
    return 0 // not enough data yet
  }
  window.addEventListener("devicemotion", motion, false);
  function motion(event) {
    historicMotion["x"].push(event.acceleration.x)
    historicMotion["y"].push(event.acceleration.y)
    historicMotion["z"].push(event.acceleration.z)
  }
  window.addEventListener("deviceorientation", orientation, false);
  function orientation(event) {
    historicOrientation["x"].push(event.alpha)
    historicOrientation["y"].push(event.beta)
    historicOrientation["z"].push(event.gamma)
  }
  setInterval(updateStatus, 100)


  $('#link').on('click', function(event) {
    if (window.lyingDownDone && window.walkingDone) {
      window.location.href = $('#link').data('path');
    } else {
      alert("please rest and exercise!");
    }
  });
});
</script>
