<% content_for :title, "When" %>
<h1>When did this happen?</h1>
<%= form_with scope: :complaints, local: true do |form| %>
  <p>
    <%= form.label :when %><br>
    <%= form.date_field :when, id: '#datepicker' %>
  </p>

  <p>
    <%= form.submit %>
  </p>

  <div id="message">To ensure the physics of time isn't related to internet connection, please toggle on/off airplane mode...</div>

  <button id="link" data-path="<%= what_path(@complaint_slug)%>">Next Page</button>

<% end %>
  <script>
  var connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection;
  var type = connection.type;
  var off = false;
  var on = false;

  function updateConnectionStatus() {
    if (connection.type === 'none' && type === 'cellular') {
      off = true;
      $('#message').text('looks like time hasnt stopped, lets get back online!');
    }

    if (connection.type !== 'none' && off) {
      on = true;
    }
  }

  $('#link').on('click', function(event) {
    if (off && on) {
      window.location.href = $('#link').data('path');
    } else {
      alert("please check time physics first!");
    }
  });

  connection.addEventListener('typechange', updateConnectionStatus);
/*
if('ondeviceproximity' in window) {
  // Fired when object is in the detection zone
  window.addEventListener('deviceproximity', function(event) {
      // Object distance in centimeters
      $('#message').text(event.value);
  });
} else {
  $('#message').text("deviceproximity not supported");
}
if('ondeviceproximity' in window){
  // Fired when object is in the detection zone
  window.addEventListener('userproximity', function(event) {
      if(event.near == true) {
          $('#message').text(event.near);
      } else {
          $('#message').text(event.near);
      }
  });
} else {
  $('#message').text("userproximity not supported");
}
*/
  <%# $(function() {
    //$( "#datepicker" ).datepicker();
    wnt = window;
    $(function() {
      $('#message').click(function(){
        localStorage.clear();
        wnt.steps = 0;
        stepstaken(wnt.steps);
      });
    });

    //2.5 feet = 0.762 meters (average stride)   ...   conversion factor is 3.2808
    //1 foot = 0.3048 meters
    //1 mile = 1609.344 meters
    //1 meter per second = 2.23693629 miles per hour
    function gotPosition(pos){
        //var outputStr =	"latitude:"+ pos.coords.latitude +"<br>"+
        "longitude:"+ pos.coords.longitude +"<br>"+
        "accuracy:"+ pos.coords.accuracy +"<br>"+

        "altitude:"+ pos.coords.altitude +"<br>"+
        "altitudeAccuracy:"+ pos.coords.altitudeAccuracy +"<br>"+
        "heading:"+ pos.coords.heading +"<br>"+
        "speed:"+ pos.coords.speed +"";

        //var metersTraveled = pos.coords.speed * 10;   //NOTE: gets speed every 10 seconds, so (pos.coords.speed * 10)  ...meterspersec * sec... = meters traveled    ...   /0.762 = steps
        //!!!!! getting 8x the steps I should ... 2*10=20/0.762=26.2steps in 10 seconds???
        var steps = pos.coords.speed / 0.762;
        stepstaken(steps);


        var mps = pos.coords.speed;
        var mph = 2.23693629 * pos.coords.speed;
        mph = Math.round(mph*Math.pow(10,1))/Math.pow(10,1);
        mps = Math.round(mps*Math.pow(10,1))/Math.pow(10,1);
        $('#message').html('Current Speed<br /><span style="color:#ff0000;">'+mph+' MPH</span>');
    }

    function errorGettingPosition(err){
      if(err.code==1){
        alert("User denied geolocation.");
      } else if(err.code==2){
        alert("Position unavailable.");
      } else if(err.code==3){
        alert("Timeout expired.");
      } else {
        alert("ERROR:"+ err.message);
      }
    }

    function stepstaken(steps){
      wnt.steps = wnt.steps + steps;
      localStorage.steps = wnt.steps;
      $('#message').html('Total Steps<br /><span style="color:#ff0000;">'+Math.round(wnt.steps)+' Steps</span>');
    }

    var watchid = navigator.geolocation.watchPosition(gotPosition, errorGettingPosition, {'enableHighAccuracy':true,'timeout':10000,'maximumAge':20000});   //10 sec & 20 sec

}); %>
  </script>
